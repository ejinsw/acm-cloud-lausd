name: Quick Test

on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to test'
        required: true
        default: 'frontend'
        type: choice
        options:
        - frontend
        - api
        - websocket
        - all

env:
  NODE_VERSION: '18'

jobs:
  test-frontend:
    if: ${{ github.event.inputs.component == 'frontend' || github.event.inputs.component == 'all' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test

  test-api:
    if: ${{ github.event.inputs.component == 'api' || github.event.inputs.component == 'all' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/api
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './backend/api/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://admin:password@localhost:5432/postgres

  test-websocket:
    if: ${{ github.event.inputs.component == 'websocket' || github.event.inputs.component == 'all' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend/websocket-server/server
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './backend/websocket-server/server/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test 