name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'free-tier'
        type: choice
        options:
        - free-tier
        - full-tier
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  AWS_REGION: us-west-1
  PROJECT_NAME: acm-cloud-lausd

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'free-tier' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
    
    - name: Terraform Init
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform init
    
    - name: Terraform Format Check
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform fmt -check
    
    - name: Terraform Validate
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform validate
    
    - name: Terraform Plan
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform plan -out=tfplan
      env:
        TF_VAR_project_name: ${{ env.PROJECT_NAME }}
        TF_VAR_environment: ${{ github.event.inputs.environment || 'free-tier' }}
    
    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ github.event.inputs.environment || 'free-tier' }}
        path: ./infra/${{ github.event.inputs.environment || 'free-tier' }}/tfplan

  terraform-apply:
    if: ${{ github.event.inputs.action == 'apply' }}
    needs: [terraform-plan]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'free-tier' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
    
    - name: Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-${{ github.event.inputs.environment || 'free-tier' }}
        path: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
    
    - name: Terraform Init
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform init
    
    - name: Terraform Apply
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform apply -auto-approve tfplan
      env:
        TF_VAR_project_name: ${{ env.PROJECT_NAME }}
        TF_VAR_environment: ${{ github.event.inputs.environment || 'free-tier' }}

  terraform-destroy:
    if: ${{ github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'free-tier' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
    
    - name: Terraform Init
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform init
    
    - name: Terraform Destroy
      working-directory: ./infra/${{ github.event.inputs.environment || 'free-tier' }}
      run: terraform destroy -auto-approve
      env:
        TF_VAR_project_name: ${{ env.PROJECT_NAME }}
        TF_VAR_environment: ${{ github.event.inputs.environment || 'free-tier' }}

  notify-terraform:
    needs: [terraform-apply, terraform-destroy]
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: Notify Terraform completion
      run: |
        if [ "${{ needs.terraform-apply.result }}" == "success" ] || [ "${{ needs.terraform-destroy.result }}" == "success" ]; then
          echo "Terraform deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || 'free-tier' }}"
          echo "Action: ${{ github.event.inputs.action || 'apply' }}"
          echo "Commit SHA: ${{ github.sha }}"
        else
          echo "Terraform deployment failed!"
          exit 1
        fi 